@inherits PanelComponent
<style>
    Queue{
        width: 450px;//20%
		height: 68%;
        left:1%;
		top: 11%;
        color: white;
        position: absolute;
		
        font-family:BerlinSansFBDemi;
        font-size: 44px;
        font-weight: bolder;
        border-radius: 14px;
	
        background-color: #1115;
        backdrop-filter: blur(20px);
		flex-direction: column;
        display: flex;
		pointer-events: all;
		transform: scale(1);
        transition: all 0.4s ease-in-out;
        overflow: hidden;

        .list{
            flex-direction: column;
            overflow: scroll;
            border-radius: 14px;
            padding: 1%;
            width: 100%;
            gap:4px;
            
            .video{
                flex-shrink: 0;
      
                font-size: 18px;
                overflow: hidden;
                flex-direction: row;
                height: 80px;
                background-color: rgb(71, 124, 117);
                border-radius: 5px;
                width: 100%;
                white-space: nowrap;
                text-overflow: ellipsis;
                opacity: 0.9;
                .video_title{
                    padding-left: 1%;
                    opacity: 0.7;
                }
                .video_time{
                    text-align: left;
                    position: absolute;
                    margin-left: 136px;
                    margin-top: 50px;
                    opacity: .7;
                }
                :hover{
                    opacity: 1;
                }
                .vidimg{
                   
                    background-position: center;
                    background-size: 100%;
                    background-repeat: no-repeat;
                   
                    flex-shrink: 0;
                    width: 30%;
                }
            }
            
        }
        
        .service_list {
            flex-shrink:0;
            width: 100%;
            height: 10%;
            margin-top: auto;
            background-color: rgb(71, 124, 117);
            justify-content: center;

            .service {
                background-size:contain;
                width: 100%;
                height: 100%;
                margin: 2px;
                background-color: #acacac;
                background-repeat: no-repeat;
                background-position: center center;
                border-radius: 4px;
                color: transparent;
            }
        }
        .service:hover{
            cursor: pointer;
            sound-in:ui.button.over;
            opacity: 1;
            background-color: #EEE;
        }
        .service:active{
            sound-in: ui.button.press;
        }

        .title{
            background-color: rgb(0, 215, 187);
            opacity: 0.3;
            justify-content: center;
            align-items: center;
            width: 100%;
            padding: 1%;
        }

		&.hide{
			transition: all 0.4s ease-in-out;
			transform: scale(0);
            width: 0px;//%
            left:-20%;
            pointer-events: none;
		}
    }
</style>
<root class="@(Input.Down("queue")&&!MediaPlayer.PanelComponent.Components.TryGet<RequestMenu>(out var _) ? "" : "hide")">
    <div class="title">QUEUE</div>

    <div class="list">
        @foreach (var video in MediaPlayer.VideoList)
		{
            <div class="video">
                <img class="vidimg" src=@video.thumb></img>
                <div class="video_title">@video.title</div>
                <div class="video_time">@(ConvertTime(video.duration)=="00:00:00"?"‚óè Live":ConvertTime(video.duration))</div>
            </div>
        }
    </div>

    <div class="service_list">
        <button @onclick=@(()=>OpenRequest($"https://www.youtube.com/")) class="service" style="background-image:url(/ui/services/youtube.png);"></button>
        <button @onclick=@(()=>OpenRequest($"https://soundcloud.com/")) class="service"  style="background-image:url(/ui/services/soundcloud.png);"></button>
        <button @onclick=@(()=>OpenRequest($"https://twitch.com/")) class="service"  style="background-image:url(/ui/services/twitch.png);"></button>
        <button @onclick=@(()=>OpenRequest($"direct")) class="service"  style="background-image:url(/ui/services/directlink.png);">direct link</button>
    </div>
</root>
@code{
    public MediaPlayer MediaPlayer {get;set;}
    protected override void OnUpdate(){
        base.OnUpdate();
    }
    private void OpenRequest(string url){
        MediaPlayer.WorldInput.Enabled=false;
        var menu=MediaPlayer.PanelComponent.Components.Create<RequestMenu>();
		menu.MediaPlayer=MediaPlayer;
		if (url=="direct"){
			menu.AddClass("OpenDirect");
			menu.RemoveClass("Close");
		}else{
			menu.RemoveClass("Close");
			menu.AddClass("Open");
		}
        menu.CurURL=url;
    }
    protected override void OnStart()
    {
        Flags=ComponentFlags.NotNetworked;
        //GameObject.NetworkMode=NetworkMode.Never;
        base.OnStart();
    }
    protected override void OnDestroy()
    {
        Panel?.Delete();
        base.OnDestroy();
    }

    static string ConvertTime(float val)
    {
        TimeSpan time=TimeSpan.FromSeconds(val);
        return $"{time.Hours:D2}:{time.Minutes:D2}:{time.Seconds:D2}";
    }
    protected override int BuildHash()
    {
        return HashCode.Combine(Input.Down("queue"));
    }
}