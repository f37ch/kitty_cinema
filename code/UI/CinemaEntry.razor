@using Sandbox.UI
@using System.Threading.Tasks
@inherits PanelComponent
<style>
CinemaEntry{
	position: absolute;
	width: 100%;
	height: 100%;
	background-color: #1115;
	justify-content: center;
	align-items: center;
	flex-direction: column;
	font-family:BerlinSansFBDemi;
	font-size: 22px;
    font-weight: bolder;
	color: white;
	backdrop-filter: blur(5px);
	transform: scale(1);
	transition: all 0.2s ease-out;
	pointer-events: all;
	

    .entry_container{
        flex-direction: column;
        width: 700;
        overflow: hidden;
        border-radius: 14px;
        background-color: rgba(0, 32, 28, 0.7);
        align-items: center;
        gap: 30px;
        .title{
            background-color: rgba(0, 215, 187, .3);
            border-radius: 14px;
            font-size: 28px;
            flex-shrink: 0;
          
            width: 100%;
            height: 76px;
            align-items: center;
            padding-left: 10px;
        }
        .closeb{
            height: 100%;
            padding:10px;
            background-color: rgb(112, 23, 30)
            border-radius: 14px;
            
          
            margin-left:auto;
            
            .ci{
                mix-blend-mode: lighten;
                margin:2%;
                flex-shrink: 0;
                font-size: 60;
  
            }
            &:hover{
                cursor: pointer;
                background-color: rgb(158, 31, 41);
            }
        }
        
      
        .entry{
            margin-top: auto;
            flex-direction: row;
            gap:10px;
            height:60px;
            width: 100%;
           
            .te{
                width: 100%;
                background-color: #5a5a5a;
            }
            .send{
                background-color: rgb(0, 128, 90);
                flex-shrink: 0;
                align-items: center;
                padding: 2%;
            }
            .send:hover{
                cursor: pointer;
                background-color: rgb(0, 160, 112);
            }
        }
        
    }
    &.hidden
	{
		opacity: 0;
		transform: scale(0);
		transition: all 0.2s ease-in;
	}
    
}
</style>
<root>
<div class="entry_container">
    <div class="title">@EntryTitle<button class="closeb" onclick=@(()=>Close())><i class="ci">close</i></button></div>
    <h4>@EntrySubstring</h4>
    <div class="entry">
        <TextEntry class="te" Value:bind="@EntryString" @ref="TextEntry"></TextEntry>
        <button class="send" onclick=@(()=>EntryCallback?.Invoke(EntryString))>Apply</button>
    </div>
</root>
@code{
public TextEntry TextEntry {get;set;}
public GameMenu Menu {get;set;}
public NetworkSync NetworkSync {get;set;}
public string EntryString {get;set;}
public event Action<string> EntryCallback;
public string EntryTitle {get;set;}="Default title";
public string EntrySubstring {get;set;}="Some text here.";

public async Task Close(){
    Panel.AddClass("hidden");
    StateHasChanged();
    await Task.DelayRealtimeSeconds(.3f);
    Destroy();
}
protected override void OnStart()
{
    Menu=Game.ActiveScene.Components.Get<GameMenu>();
    NetworkSync=Game.ActiveScene.Components.Get<NetworkSync>(FindMode.EnabledInSelfAndDescendants);
	base.OnStart();
}
}