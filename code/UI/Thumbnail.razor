@using Sandbox;
@using Sandbox.UI;
@inherits PanelComponent
<style>
	Thumbnail{
		width: 100%;
		height: 100%;
		display: flex;
        flex-direction: column;
		
        font-family:BerlinSansFBDemi;
		color:white;
        overflow: hidden;
		.thumbtitle{
			font-family:BerlinSansFBDemi;
			font-weight: bolder;
			font-size:50px;
			text-overflow: ellipsis;
			white-space: nowrap;
			
			padding: 2%;
			flex-shrink: 0;
		}
		.img{
			background-color: rgba(0, 215, 186, 0.185);
			background-position: center;
            background-size: contain;
            background-repeat: no-repeat;

            width: 100%;
			height: 100%;
		}
		.container{
            align-items:center;
            bottom:0px;
            width: 100%;
            height: 4%;
            position: absolute;
            background-color:rgba(87, 87, 87, 1);
            opacity: .8;
        }
		.durbar{
			min-height: 50%;
            align-items: center;
        	flex-grow: 1;
            position: absolute;
        	height: 100%;
        	background-color: red;
		}
	}
</style>

<root>
	<div class="thumbtitle">@GetTitle()</div>
	<img class="img" src="@GetThumbnail()"/>
	@if (MediaPlayer.Duration>0){
		<div class="container">
			<div class="durbar" style="width: @((MediaPlayer.Curtime/MediaPlayer.Duration)*100)%;"/>
		</div>
	}
</root>

@code
{
	[Property] MediaPlayer MediaPlayer {get;set;}
	protected override void OnFixedUpdate(){
		base.OnFixedUpdate();
	}
	private string GetTitle()
    {
		if (MediaPlayer.Title!=null){
			return MediaPlayer.Title;
		}else{
			return "#thumbnail.novideo";
		}
    }
	private string GetThumbnail()
    {
		if (MediaPlayer.Thumbnail!=null){
			return MediaPlayer.Thumbnail;
		}else{
			return "/ui/novideo.gif";
		}
    }
	protected override int BuildHash() => System.HashCode.Combine(RealTime.Now.CeilToInt());
}