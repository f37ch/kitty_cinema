@using Sandbox.UI
@inherits PanelComponent
<style>
PasswordEntry{
	position: absolute;
	width: 100%;
	height: 100%;
	background-color: #1115;
	justify-content: center;
	align-items: center;
	flex-direction: column;
	font-family:BerlinSansFBDemi;
	font-size: 22px;
    font-weight: bolder;
	color: white;
	backdrop-filter: blur(20px);
	transform: scale(1);
	transition: all 0.1s ease-out;
	pointer-events: all;
	flex-shrink: 0;
    .entry_container{
        flex-direction: column;
        width: 700;
        height: 400;
        overflow: hidden;
        border-radius: 14px;
        background-color: gray;
     
        align-items: center;
        align-content: center;
        gap: 5%;
        .title{
            background-color: rgb(7, 75, 72);
            border-radius: 14px;
            font-size: 28px;
            flex-shrink: 0;
          
            width: 100%;
            height: 20%;
            align-items: center;
            justify-content: center;
        }
        
        .i{
            mix-blend-mode: lighten;
            margin:2%;
            flex-shrink: 0;
            font-size: 180;
            border-radius: 14px;
            background-color: rgb(128, 41, 41);
        }
        .entry{
            flex-direction: row;
            height: 100%;
            width: 100%;
           
            .te{
                width: 100%;
                background-color: #5a5a5a;
            }
            .send{
                background-color: rgb(0, 128, 90);
                flex-shrink: 0;
                align-items: center;
                padding: 2%;
            }
            .send:hover{
                cursor: pointer;
                background-color: rgb(0, 160, 112);
            }
        }
        .disconnect{
            background-color: rgb(102, 81, 81);
            width: 100%;
            justify-content: center;
            align-items: center;
            padding: 4px;
            flex-shrink: 0;
        }
        .disconnect:hover{
            cursor: pointer;
            background-color: rgb(131, 83, 83);
        }
    }
    &.hidden
	{
		opacity: 0;
		transform: scale(0);
		transition: all 0.2s ease-in;
	}
    
}
</style>
<root>
<div class="entry_container">
    <div class="title">This lobby Requires Password To Join</div>
    
    <i class="i">lock</i>
    <div class="entry">
        <TextEntry class="te" Value:bind="@PasswordString" @ref="TextEntry"></TextEntry>
        <button class="send" onclick=@SendPassword>SEND</button>
    </div>
    <button class="disconnect" onclick=@Disconnect>DISCONNECT</button>

</root>
@code{
public TextEntry TextEntry {get;set;}
public GameMenu Menu {get;set;}
public NetworkSync NetworkSync {get;set;}
public string PasswordString {get;set;}

protected override void OnUpdate(){
    base.OnUpdate();
    if (Menu==null){Menu=Game.ActiveScene.Components.Get<GameMenu>(FindMode.EnabledInSelfAndDescendants);return;} 
    if (Menu.IsMenuOpen&&!Panel.HasClass("hidden")){
        Panel.AddClass("hidden");
        StateHasChanged();
    }else if(!Menu.IsMenuOpen&&Panel.HasClass("hidden")){
         Panel.RemoveClass("hidden");
         StateHasChanged();
    }
}
void SendPassword()
{
	//NetworkSync.ReceivePassword(PasswordString);
}
void Disconnect()
{
    NetworkSync.Disconnect("DISCONNECTED","no_encryption");
}
protected override void OnStart()
{
    Menu=Game.ActiveScene.Components.Get<GameMenu>();
    NetworkSync=Game.ActiveScene.Components.Get<NetworkSync>(FindMode.EnabledInSelfAndDescendants);
	base.OnStart();
}
}